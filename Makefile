NAME		= push_swap

GREEN		= \033[0;32m
GREY		= \033[0;90m
YELLOW		= \033[1;33m
FRED		= \033[41;1;37m
RED			= \033[0;31m
RESET		= \033[0m


OBJ_DIR = ./objects

SRCS_PATH	= ./sources

CC 			= gcc -g3

FLAGS 		= -Wall -Wextra -Werror

REMOVE 		= rm -f

INCLUDES 	= -I ./includes/

LIBFT_D		= ./libft
LIBFT_I		= -I$(LIBFT_D)
LIBFT_L		= -L$(LIBFT_D) -lft
LIBFT_A		= $(LIBFT_D)/libft.a

SRCS 		=	$(SRCS_PATH)/push_swap.c  \
		$(SRCS_PATH)/operations/stack.c \
		$(SRCS_PATH)/operations/movements.c \
		$(SRCS_PATH)/operations/push.c \
		$(SRCS_PATH)/operations/rotate.c \
		$(SRCS_PATH)/operations/swap.c \
		$(SRCS_PATH)/check_full/checkers.c \
		$(SRCS_PATH)/check_full/handle_errors.c \
		$(SRCS_PATH)/sort_algs/radix.c \
		$(SRCS_PATH)/sort_algs/sort_five.c \
		$(SRCS_PATH)/sort_algs/sort_utils.c \
		$(SRCS_PATH)/sort_algs/merge_sort.c \
		$(SRCS_PATH)/sort_algs/handle_index.c \

OBJS		= $(addprefix $(OBJ_DIR)/,$(SRCS:.c=.o))


all:		$(NAME)

$(NAME): $(OBJS) $(LIBFT_A)
	@printf "$(YELLOW)compiling $(NAME) ... $(RESET)"
	@$(CC) $(FLAGS) $(INCLUDES) $(LIBFT_I) $(OBJS) $(LIBFT_L) -o $(NAME)
	@echo "$(GREEN)Done!!$(RESET)"

$(OBJ_DIR)/%.o: %.c
	@mkdir -p $(dir $@)
	@$(CC) $(FLAGS) $(INCLUDES) $(LIBFT_I) -c $< -o $@

$(LIBFT_A):
	@echo "$(YELLOW)Compiling libft ... \t\c$(RESET)"
	@$(MAKE) -s -C $(LIBFT_D)
	@echo "$(GREEN)Done!!$(RESET)"

clean:
	@${REMOVE} ${NAME}
	@echo "$(FRED)\t\t\t\n\n$(NAME): $(NAME) was deleted\t\t\t\n\n$(RESET)"


fclean:
	@make -s fclean -C $(LIBFT_D)/
	@printf "$(RED)cleaning $(NAME) executable ... \n$(RESET)"
	@$(REMOVE) $(NAME)
	@$(REMOVE)  -r $(OBJ_DIR)
	@echo "$(FRED)\t\t\t\n\n$(NAME): $(NAME) was deleted\t\t\t\n\n$(RESET)"

re:			clean $(NAME)

run3:
	@./$(NAME) 3 2 1

run5:
	ARG="4 3 2 1 5"; ./$(NAME) $$ARG | ./checker_linux $$ARG

run7:
	@ARG="20 6 50 8 4 3 7 9 12; ./$(NAME) $$ARG | ./checker_linux $$ARG

run-sorted-1:
	@ARG="10 11 12 14 13; ./$(NAME) $$ARG | ./checker_linux $$ARG

run-sorted-2:
	@ARG="1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17; ./$(NAME) $$ARG | ./checker_linux $$ARG

run-sorted-3:
	@ARG="0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 99 98; ./$(NAME) $$ARG | ./checker_linux $$ARG

run80:
	@ARG="7 27 20 66 42 10 44 9 2 60 50 17 22 58 8 41 68 6 26 12 55 54 23 57 62 21 36 69 14 1 24 46 52 61 64 35 19 67 51 56 40 34 28 30 15 3 37 70 39 32 25 29 63 13 11 53 18 48 45 4 31 5 16 65 49 47 38 33 43 59; ./$(NAME) $$ARG | ./checker_linux $$ARG

run100:
	@ARG="51 9 45 4 124 44 28 186 157 18 122 25 86 105 53 151 64 179 190 123 102 54 80 150 93 166 100 90 8 46 104 121 3 152 144 36 1 38 52 155 59 75 63 177 56 149 160 167 169 133 161 120 40 66 55 78 84 175 168 173 79 110 92 6 137 193 111 148 171 156 71 82 76 145 172 88 31 35 189 99 165 21 128 37 58 170 107 140 187 47 194 87 49 176 114 74 119 24 197 17; ./$(NAME) $$ARG | ./checker_linux $$ARG

run500:
	@ARG="182 253 290 643 545 227 85 372 298 422 608 425 143 400 29 220 695 626 324 393 167 479 476 361 64 297 688 54 7 446 586 461 655 350 498 609 206 564 538 625 339 519 284 363 421 127 497 32 286 31 346 8 6 673 632 51 14 251 281 106 484 274 607 352 332 187 296 437 474 635 367 267 330 596 555 639 460 301 553 652 310 322 623 520 470 471 240 572 65 686 81 525 656 316 388 590 502 306 211 384 196 76 488 660 541 456 117 565 45 482 129 380 131 544 386 95 262 79 473 540 390 675 80 198 58 203 223 15 254 333 407 692 75 521 134 128 335 50 215 604 466 165 556 642 142 312 41 522 356 396 518 428 82 119 175 276 693 83 38 138 228 700 571 62 557 202 501 509 697 213 148 598 638 108 415 89 149 678 184 679 216 78 458 70 208 382 426 183 292 478 406 680 560 492 161 212 600 270 515 40 59 11 412 401 162 260 657 1 249 204 112 303 111 559 597 226 173 419 154 282 662 87 69 511 42 547 100 523 394 302 472 30 562 230 676 103 200 685 448 395 244 385 72 687 674 454 152 536 46 337 269 357 546 287 513 257 77 343 699 325 601 195 648 135 649 531 124 232 181 387 362 677 534 317 52 354 682 27 243 214 261 658 189 113 637 156 238 88 197 689 133 71 34 155 636 530 563 263 620 144 583 299 500 68 344 533 633 336 378 233 355 323 369 39 398 283 684 349 405 438 381 61 495 469 493 619 176 503 483 514 168 671 139 275 481 452 116 229 329 432 17 409 130 98 506 246 440 447 548 10 150 25 341 374 580 558 630 376 326 475 342 66 661 508 424 147 151 145 585 410 698 177 273 334 279 670 603 512 524 5 672 218 252 569 510 56 188 209 641 485 487 49 414 551 99 444 57 579 179 439 137 180 236 86 517 457 295 28 21 115 13 463 277 164 505 231 589 125 313 328 92 121 190 576 566 140 631 266 120 264 366 606 587 201 94 90 696 234 429 47 60 567 194 365 288 611 391 126 449 599 221 294 392 507 217 694 462 272 19 239 207 377 219 3 646 431 172 278 307 528 345 532 199 109 225 114 300 436 171 285 136 242 399 97 379 577 667 305 408 621 465 663 122 403 4 467 539 434 237 490; ./$(NAME) $$ARG | ./checker_linux $$ARG

val:
	@valgrind --leak-check=full --show-leak-kinds=all --quiet --tool=memcheck --keep-debuginfo=yes ./$(NAME) 2 60 3 28 22 16 38 77 85 41 34 97 65 51 43 47 83 99 33 50 11 84 37 98 53 46 30 25 59 57 56 55 0 17 40 39 64 52 26 49 44 66 12 92 90 9 72 24 88 68 4 93 54 79 70 80 74 8 78 94 45 19 29 14 27 15 48 75 96 91 10 32 95 69 31 42 67 82 73 6 13 1 87 63 36 20 5 7 71 35 89 58 86 18 76 81 21 61 62 23

.PHONY:		all clean fclean re run3 run5 run7 run-sorted-1 run-sorted-2 run-sorted-3 run80 run100 run500 val
